env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "jOK0QJ2tA5FguCn1k1c7EyelJikZm9oD8Zf2wdhyNWl3sLBomBRqadRkZ58jMhoY3WWuwNDYOOrxQTYrS6dySqbmCTpP6oARr76STMBxLhnboSEyntyVjPBT7FTDCgwVIMWv7KdvQNyBi4TT864rCiMPREcCj0CqMwGevlXbVN98hmRYNj5OqFEItn6DD71AUGqgjdaCdsIEQvbbfY4DNWaI4XILh5xDrHNb2y87FqDHXVrmd4qcQAdbMWpXyoCnmnbAxzWE9Nz0/xRkwrCi3QWoAm5YoQS4oVHV2MMpHRu8Lz6C198fgc1cvIq8seeCMG/8pbZMCf6D/9lOWP8Dg5ZJTdVFMbPd2ba1P4l+xw/4Ryy9LOf+pagIShz4NGQw3OkBUaXrdb46963iKxI+XMCLgSi0+SCWMhAXSoH4znonZd1YuqjBnoHKEIKA4pUrARVC/LCVo5vmuKEc6lq7zmTJN0cCKGXrFiTsqro0xo0PTmLI4hvsWmIYvKzwxIKoZNmuGrMsGLhv/+qlYAz//sPDJqdKKX3PZcjFm2lbuSOT4EzmLCFK3diuMHKXe3rtLXEHLCWsaoizi3138hTEL9R/dJ5bcnepoZnbBjzdYBBZQ9IRtJssNaJlqhddL42HraRAkViRBqx2tZndpAi3WjjFd2jsiZf1y2PPi0AdRmk="


addons:
  coverity_scan:
    project:
      name: "evelikov/waffle"
      description: "Build submitted via Travis CI"
    notification_email: emil.l.velikov@gmail.com
    build_command_prepend: "rm -rf build && cmake -H. -Bbuild $CMAKE_OPTIONS"
    build_command:   "cmake --build build --use-stderr -- -k"
    branch_pattern: coverity_scan


branches:
    only:
      - wip/ci
# XXX: tweak this later


language: c
# Android: C++
# OSx: XXX ?


matrix:
  include:
  - os: linux
    compiler: gcc
    env:
    - APT_PACKAGES="coreutils weston libegl1-mesa-dev libgl1-mesa-dev libgbm-dev libwayland-dev libx11-dev docbook-xsl xsltproc"
    - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release -Dwaffle_build_manpages=1 -Dwaffle_build_htmldocs=1"
  - os: linux
    compiler: clang
    env:
    - APT_PACKAGES="coreutils weston libegl1-mesa-dev libgl1-mesa-dev libgbm-dev libwayland-dev libx11-dev"
    - CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
# gcc (Android) 32/64bit
# clang (OSx)
# mingw32/64 cross-compile on linux (Win) - 32/64 bit
# mingw32/64 (Win) - 32/64 bit


install:
- sudo add-apt-repository -y ppa:kalakris/cmake
- sudo add-apt-repository -y ppa:xorg-edgers/ppa
- sudo apt-get update -qq
- sudo apt-get install -qq -y cmake
- sudo apt-get install -qq -y libdrm2 libdrm-dev libwayland0 libegl1-mesa libegl1-mesa-drivers libgbm1 libgl1-mesa-dri libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libgles1-mesa libgles2-mesa mesa-common-dev
- if [ "$APT_PACKAGES" ]; then sudo apt-get install -qq -y $APT_PACKAGES; fi


script:
  - export DISPLAY=:99.0
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x24 &
  - nohup weston &
  - cmake -H. -Bbuild $CMAKE_OPTIONS
  - cmake --build build --use-stderr -- -k
  - cmake --build build --use-stderr --target check -- -k
  - cmake --build build --use-stderr --target check-func -- -k
  - cmake --build build --use-stderr --target package -- -k
  - build/bin/wflinfo -p glx -a gl || echo Failed
  - build/bin/wflinfo -p glx -a gles1 || echo Failed
  - build/bin/wflinfo -p glx -a gles2 || echo Failed
  - build/bin/wflinfo -p glx -a gles3 || echo Failed
  - build/bin/wflinfo -p x11_egl -a gl || echo Failed
  - build/bin/wflinfo -p x11_egl -a gles1 || echo Failed
  - build/bin/wflinfo -p x11_egl -a gles2 || echo Failed
  - build/bin/wflinfo -p x11_egl -a gles3 || echo Failed
  - build/bin/wflinfo -p gbm -a gl || echo Failed
  - build/bin/wflinfo -p gbm -a gles1 || echo Failed
  - build/bin/wflinfo -p gbm -a gles2 || echo Failed
  - build/bin/wflinfo -p gbm -a gles3 || echo Failed
